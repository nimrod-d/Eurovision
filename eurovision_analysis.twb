<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_df_votes' inline='true' name='federated.0o7linv13zeexi1edjfpe125euyk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_df_votes' name='textscan.1b38y5h0stmlbk10biidi01vz4kv'>
            <connection class='textscan' directory='C:/Users/Nimrod/Documents/eurovision' filename='cleaned_df_votes.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1b38y5h0stmlbk10biidi01vz4kv' name='bias_df.csv' table='[bias_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='jury_over_tele' ordinal='2' />
            <column datatype='integer' name='participation' ordinal='3' />
            <column datatype='real' name='%_jury_over_tele' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1b38y5h0stmlbk10biidi01vz4kv' name='cleaned_df_votes.csv' table='[cleaned_df_votes#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='index' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
              <column datatype='string' name='to_country_id' ordinal='3' />
              <column datatype='string' name='to_country' ordinal='4' />
              <column datatype='string' name='performer' ordinal='5' />
              <column datatype='string' name='song' ordinal='6' />
              <column datatype='real' name='place_final' ordinal='7' />
              <column datatype='real' name='points_final' ordinal='8' />
              <column datatype='real' name='points_tele_final' ordinal='9' />
              <column datatype='real' name='points_jury_final' ordinal='10' />
              <column datatype='real' name='diff' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1b38y5h0stmlbk10biidi01vz4kv' name='bias_df.csv' table='[bias_df#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='integer' name='jury_over_tele' ordinal='2' />
              <column datatype='integer' name='participation' ordinal='3' />
              <column datatype='real' name='%_jury_over_tele' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[%_jury_over_tele]' value='[bias_df.csv].[%_jury_over_tele]' />
          <map key='[F1 (bias_df.csv)]' value='[bias_df.csv].[F1]' />
          <map key='[F1]' value='[cleaned_df_votes.csv].[F1]' />
          <map key='[country]' value='[bias_df.csv].[country]' />
          <map key='[diff]' value='[cleaned_df_votes.csv].[diff]' />
          <map key='[index]' value='[cleaned_df_votes.csv].[index]' />
          <map key='[jury_over_tele]' value='[bias_df.csv].[jury_over_tele]' />
          <map key='[participation]' value='[bias_df.csv].[participation]' />
          <map key='[performer]' value='[cleaned_df_votes.csv].[performer]' />
          <map key='[place_final]' value='[cleaned_df_votes.csv].[place_final]' />
          <map key='[points_final]' value='[cleaned_df_votes.csv].[points_final]' />
          <map key='[points_jury_final]' value='[cleaned_df_votes.csv].[points_jury_final]' />
          <map key='[points_tele_final]' value='[cleaned_df_votes.csv].[points_tele_final]' />
          <map key='[song]' value='[cleaned_df_votes.csv].[song]' />
          <map key='[to_country]' value='[cleaned_df_votes.csv].[to_country]' />
          <map key='[to_country_id]' value='[cleaned_df_votes.csv].[to_country_id]' />
          <map key='[year]' value='[cleaned_df_votes.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>to_country_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[to_country_id]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>to_country_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>to_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[to_country]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>to_country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>performer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[performer]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>performer</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>song</remote-name>
            <remote-type>129</remote-type>
            <local-name>[song]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>song</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_final</remote-name>
            <remote-type>5</remote-type>
            <local-name>[place_final]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>place_final</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points_final</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points_final]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>points_final</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points_tele_final</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points_tele_final]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>points_tele_final</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points_jury_final</remote-name>
            <remote-type>5</remote-type>
            <local-name>[points_jury_final]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>points_jury_final</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diff]</local-name>
            <parent-name>[cleaned_df_votes.csv]</parent-name>
            <remote-alias>diff</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (bias_df.csv)]</local-name>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jury_over_tele</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jury_over_tele]</local-name>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias>jury_over_tele</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>participation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[participation]</local-name>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias>participation</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>%_jury_over_tele</remote-name>
            <remote-type>5</remote-type>
            <local-name>[%_jury_over_tele]</local-name>
            <parent-name>[bias_df.csv]</parent-name>
            <remote-alias>%_jury_over_tele</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Jury Over Tele' datatype='real' name='[%_jury_over_tele]' role='measure' type='quantitative' />
      <column caption='diff_jury_tele' datatype='real' name='[Calculation_2082914845714034688]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[points_jury_final] - [points_tele_final]' />
      </column>
      <column caption='p. sum/avg vote_diff' datatype='real' name='[Calculation_2181149626027630592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 then SUM([Calculation_2082914845714034688])&#13;&#10;WHEN 2 then AVG([Calculation_2082914845714034688])&#13;&#10;END' />
      </column>
      <column aggregation='None' datatype='integer' name='[Diff (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[diff]' peg='0' size='15' />
      </column>
      <column caption='F1 (bias df.csv)' datatype='integer' name='[F1 (bias_df.csv)]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year (date)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE( 1970, [year], 1 )' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='bias_df.csv' datatype='table' name='[__tableau_internal_object_id__].[bias_df.csv_F4685F4D74DC432CA8199F956505C52A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_df_votes.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='abs_diff' datatype='real' name='[diff]' role='measure' type='quantitative' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Jury Over Tele' datatype='integer' name='[jury_over_tele]' role='measure' type='quantitative' />
      <column caption='Participation' datatype='integer' name='[participation]' role='measure' type='quantitative' />
      <column caption='Performer' datatype='string' name='[performer]' role='dimension' type='nominal' />
      <column caption='Place Final' datatype='real' name='[place_final]' role='measure' type='quantitative' />
      <column caption='Points Final' datatype='real' name='[points_final]' role='measure' type='quantitative' />
      <column caption='Points Jury Final' datatype='real' name='[points_jury_final]' role='measure' type='quantitative' />
      <column caption='Points Tele Final' datatype='real' name='[points_tele_final]' role='measure' type='quantitative' />
      <column caption='Song' datatype='string' name='[song]' role='dimension' type='nominal' />
      <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='To Country Id' datatype='string' name='[to_country_id]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
      <column-instance column='[participation]' derivation='Sum' name='[pcto:sum:participation:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[participation]' derivation='Sum' name='[rank:sum:participation:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[%_jury_over_tele]' derivation='Sum' name='[sum:%_jury_over_tele:qk]' pivot='key' type='quantitative' />
      <column-instance column='[participation]' derivation='Sum' name='[sum:participation:qk]' pivot='key' type='quantitative' />
      <group caption='top_bottom_country_diff' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[bottom_diff_country]' function='reference' />
          <groupfilter field='[top_diff_country]' function='reference' />
        </groupfilter>
      </group>
      <group caption='bottom_diff_country' name='[bottom_diff_country]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Calculation_2082914845714034688])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[to_country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='top_diff_country' name='[top_diff_country]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Calculation_2082914845714034688])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[to_country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[sum:\%_jury_over_tele:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[pcto:sum:participation:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[rank:sum:participation:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[sum:participation:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:to_country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North MacedoniaN.Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Israel&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Sum of Difference' caption='votes_difference_sum/avg' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Sum of Difference' />
            <alias key='2.' value='Avg of Difference' />
          </aliases>
        </column>
        <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='5.0' max='25.0' min='5.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bias_df.csv' id='bias_df.csv_F4685F4D74DC432CA8199F956505C52A'>
            <properties context=''>
              <relation connection='textscan.1b38y5h0stmlbk10biidi01vz4kv' name='bias_df.csv' table='[bias_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='integer' name='jury_over_tele' ordinal='2' />
                  <column datatype='integer' name='participation' ordinal='3' />
                  <column datatype='real' name='%_jury_over_tele' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='cleaned_df_votes.csv' id='cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35'>
            <properties context=''>
              <relation connection='textscan.1b38y5h0stmlbk10biidi01vz4kv' name='cleaned_df_votes.csv' table='[cleaned_df_votes#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='index' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
                  <column datatype='string' name='to_country_id' ordinal='3' />
                  <column datatype='string' name='to_country' ordinal='4' />
                  <column datatype='string' name='performer' ordinal='5' />
                  <column datatype='string' name='song' ordinal='6' />
                  <column datatype='real' name='place_final' ordinal='7' />
                  <column datatype='real' name='points_final' ordinal='8' />
                  <column datatype='real' name='points_tele_final' ordinal='9' />
                  <column datatype='real' name='points_jury_final' ordinal='10' />
                  <column datatype='real' name='diff' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[F1]' />
              <expression op='[F1 (bias_df.csv)]' />
            </expression>
            <first-end-point object-id='cleaned_df_votes.csv_BBBB241FEAB449B9AEE06A058A703A35' />
            <second-end-point object-id='bias_df.csv_F4685F4D74DC432CA8199F956505C52A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Sum of Difference' caption='votes_difference_sum/avg' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <aliases>
          <alias key='1.' value='Sum of Difference' />
          <alias key='2.' value='Avg of Difference' />
        </aliases>
        <members>
          <member alias='Sum of Difference' value='1.' />
          <member alias='Avg of Difference' value='2.' />
        </members>
      </column>
      <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
        <range granularity='5.0' max='25.0' min='5.0' />
      </column>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0o7linv13zeexi1edjfpe125euyk'>
      <datasources>
        <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
      </datasources>
      <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
        <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
        <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]'>
        <groupfilter function='level-members' level='[none:to_country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]'>
        <groupfilter function='level-members' level='[yr:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='avg_diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#756ab6' fontsize='11'>&lt;</run>
            <run bold='true' fontcolor='#756ab6' fontsize='11'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#756ab6' fontsize='11'>&gt; Between Jury and Televote Points by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Sum of Difference' caption='votes_difference_sum/avg' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Sum of Difference' />
                <alias key='2.' value='Avg of Difference' />
              </aliases>
            </column>
            <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='5.0' max='25.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
            <column caption='diff_jury_tele' datatype='real' name='[Calculation_2082914845714034688]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[points_jury_final] - [points_tele_final]' />
            </column>
            <column caption='p. sum/avg vote_diff' datatype='real' name='[Calculation_2181149626027630592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN 1 then SUM([Calculation_2082914845714034688])&#13;&#10;WHEN 2 then AVG([Calculation_2082914845714034688])&#13;&#10;END' />
            </column>
            <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
            <column caption='Points Jury Final' datatype='real' name='[points_jury_final]' role='measure' type='quantitative' />
            <column caption='Points Tele Final' datatype='real' name='[points_tele_final]' role='measure' type='quantitative' />
            <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_2181149626027630592]' derivation='User' name='[usr:Calculation_2181149626027630592:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]' scope='cols' value='' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' value='#756ab6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#756ab6' />
            <format attr='color' scope='rows' value='#756ab6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#aa0000</color>
                <color>#ae0f0f</color>
                <color>#b22020</color>
                <color>#b63131</color>
                <color>#bb4444</color>
                <color>#bf5656</color>
                <color>#c36a6a</color>
                <color>#c77f7f</color>
                <color>#cc9494</color>
                <color>#d0aaaa</color>
                <color>#d4c1c1</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffe5e5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' value='Year&#10;'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#756ab6'>Year</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' value='Country'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#756ab6'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</rows>
        <cols>[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]</cols>
      </table>
      <simple-id uuid='{4BE75EC7-0E65-4A6C-AB41-0CF4F5225155}' />
    </worksheet>
    <worksheet name='jury_bias_participation_ratio'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
          </datasources>
          <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
            <column caption='% Jury Over Tele' datatype='real' name='[%_jury_over_tele]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
            <column caption='Participation' datatype='integer' name='[participation]' role='measure' type='quantitative' />
            <column-instance column='[%_jury_over_tele]' derivation='Sum' name='[sum:%_jury_over_tele:qk]' pivot='key' type='quantitative' />
            <column-instance column='[participation]' derivation='Sum' name='[sum:participation:qk]' pivot='key' type='quantitative' />
            <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[sum:\%_jury_over_tele:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o7linv13zeexi1edjfpe125euyk].[sum:participation:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0o7linv13zeexi1edjfpe125euyk].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:%_jury_over_tele:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[:Measure Names]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0o7linv13zeexi1edjfpe125euyk].[:Measure Names]' value='169' />
            <format attr='text-format' field='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:%_jury_over_tele:qk]' value='p0%' />
            <format attr='text-format' field='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:participation:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0o7linv13zeexi1edjfpe125euyk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o7linv13zeexi1edjfpe125euyk].[none:country:nk]</rows>
        <cols>[federated.0o7linv13zeexi1edjfpe125euyk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A5884A70-F81B-4F3C-9F39-17D154ACEFB9}' />
    </worksheet>
    <worksheet name='place_in_final'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
            <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
            <column caption='Place Final' datatype='real' name='[place_final]' role='measure' type='quantitative' />
            <column-instance column='[place_final]' derivation='Sum' name='[sum:place_final:ok]' pivot='key' type='ordinal' />
            <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:place_final:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</rows>
        <cols>[federated.0o7linv13zeexi1edjfpe125euyk].[tyr:year:ok]</cols>
      </table>
      <simple-id uuid='{CE0DCC8A-484C-4C60-A18C-0696CBEBA30D}' />
    </worksheet>
    <worksheet name='scatter_bias'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='5.0' max='25.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
            <column caption='diff_jury_tele' datatype='real' name='[Calculation_2082914845714034688]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[points_jury_final] - [points_tele_final]' />
            </column>
            <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Points Final' datatype='real' name='[points_final]' role='measure' type='quantitative' />
            <column caption='Points Jury Final' datatype='real' name='[points_jury_final]' role='measure' type='quantitative' />
            <column caption='Points Tele Final' datatype='real' name='[points_tele_final]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2082914845714034688]' derivation='Sum' name='[sum:Calculation_2082914845714034688:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points_final]' derivation='Sum' name='[sum:points_final:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points_jury_final]' derivation='Sum' name='[sum:points_jury_final:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points_tele_final]' derivation='Sum' name='[sum:points_tele_final:qk]' pivot='key' type='quantitative' />
            <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]' />
          <slices>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' scope='cols' value='' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#756ab6' />
            <format attr='color' scope='cols' value='#756ab6' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='band-color' scope='rows' value='#faf4e7' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#ffe5e5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#e157594b' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='rows' value='#ac87c527' />
            <format attr='stroke-color' scope='cols' value='#ac87c527' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:points_jury_final:qk]' />
              <text column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:points_tele_final:qk]' />
              <lod column='[federated.0o7linv13zeexi1edjfpe125euyk].[none:year:qk]' />
              <color column='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='0.0' value-column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.3293370008468628' />
                <format attr='shape' value=':filled/diamond' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o7linv13zeexi1edjfpe125euyk].[sum:points_final:qk]</rows>
        <cols>[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]</cols>
        <show-full-range>
          <column>[federated.0o7linv13zeexi1edjfpe125euyk].[Diff (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{21C0D162-5DA2-4394-BB8D-B7B33531DD57}' />
    </worksheet>
    <worksheet name='sum_diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Sum of Difference Between Jury and Televote Points by Country years 2016 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
              <range granularity='5.0' max='25.0' min='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
            <column caption='diff_jury_tele' datatype='real' name='[Calculation_2082914845714034688]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[points_jury_final] - [points_tele_final]' />
            </column>
            <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
            <column caption='Points Jury Final' datatype='real' name='[points_jury_final]' role='measure' type='quantitative' />
            <column caption='Points Tele Final' datatype='real' name='[points_tele_final]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2082914845714034688]' derivation='Sum' name='[sum:Calculation_2082914845714034688:qk]' pivot='key' type='quantitative' />
            <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</column>
            <column>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' scope='rows' value='diff_jury(+)_tele(-)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#9dcbe4</color>
                <color>#8ec2df</color>
                <color>#80b6d9</color>
                <color>#73a8d0</color>
                <color>#669bc7</color>
                <color>#5c91bf</color>
                <color>#5385b2</color>
                <color>#487aa9</color>
                <color>#3b6ea0</color>
                <color>#306495</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]</rows>
        <cols>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</cols>
      </table>
      <simple-id uuid='{696F48D0-7B1F-4F88-B85C-1CD32EB725DD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#756ab627' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Tableau Book' />
          <format attr='color' value='#555555' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cleaned_df_votes' name='federated.0o7linv13zeexi1edjfpe125euyk' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Sum of Difference' caption='votes_difference_sum/avg' datatype='real' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Sum of Difference' />
            <alias key='2.' value='Avg of Difference' />
          </aliases>
          <members>
            <member alias='Sum of Difference' value='1.' />
            <member alias='Avg of Difference' value='2.' />
          </members>
        </column>
        <column caption='Select number or top/bottom countries' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
          <range granularity='5.0' max='25.0' min='5.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0o7linv13zeexi1edjfpe125euyk'>
        <column-instance column='[to_country]' derivation='None' name='[none:to_country:nk]' pivot='key' type='nominal' />
        <column caption='To Country' datatype='string' name='[to_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
        <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='97916' id='9' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
          <zone h='97916' id='7' type-v2='layout-basic' w='84187' x='586' y='1042'>
            <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='84187' x='586' y='1042' />
          </zone>
          <zone fixed-size='200' h='97916' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='14641' x='84773' y='1042'>
            <zone h='12240' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14641' x='84773' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10808' id='12' mode='slider' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14641' x='84773' y='13282'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='8855' id='4' type-v2='text' w='51464' x='0' y='0'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#756ab6' fontsize='22'>Eurovision Voting Trends</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='91145' id='14' name='scatter_bias' show-title='false' w='51464' x='0' y='8855'>
          <layout-cache minheight='171' minwidth='189' type-h='scalable' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#f5e9f5' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='70' />
            <format attr='margin-top' value='49' />
            <format attr='margin-bottom' value='47' />
            <format attr='padding' value='4' />
            <format attr='background-color' value='#e0aed027' />
          </zone-style>
        </zone>
        <zone h='100000' id='5' name='avg_diff' w='48536' x='51464' y='0'>
          <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='50' />
            <format attr='margin-right' value='250' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5599' id='16' type-v2='text' w='52343' x='25769' y='93750'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#756ab6'><![CDATA[ <---------Tele votes | Juty votes -------->]]></run>
          </formatted-text>
        </zone>
        <zone h='36719' id='17' name='avg_diff' param='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' type-v2='filter' values='database' w='15007' x='84919' y='24219' />
        <zone h='34375' id='20' mode='checkdropdown' name='avg_diff' param='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' type-v2='filter' values='database' w='14788' x='84846' y='61068' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='21' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='8855' id='4' type-v2='text' w='51464' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#756ab6' fontsize='22'>Eurovision Voting Trends</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='36719' id='17' mode='checkdropdown' name='avg_diff' param='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' type-v2='filter' values='database' w='15007' x='84919' y='24219'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34375' id='20' mode='checkdropdown' name='avg_diff' param='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' type-v2='filter' values='database' w='14788' x='84846' y='61068'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='avg_diff' w='48536' x='51464' y='0'>
                  <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12240' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14641' x='84773' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91145' id='14' is-fixed='true' name='scatter_bias' show-title='false' w='51464' x='0' y='8855'>
                  <layout-cache minheight='171' minwidth='189' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#f5e9f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e0aed027' />
                  </zone-style>
                </zone>
                <zone h='10808' id='12' mode='slider' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14641' x='84773' y='13282'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5599' id='16' type-v2='text' w='52343' x='25769' y='93750'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#756ab6'><![CDATA[ <---------Tele votes | Juty votes -------->]]></run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{897646A3-7534-447C-8AD1-C56983B5F366}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='sum_diff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o7linv13zeexi1edjfpe125euyk].[sum:Calculation_2082914845714034688:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D03D4A44-0451-4E43-8EC3-47E4232AECFB}' />
    </window>
    <window class='worksheet' name='avg_diff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='210'>
            <card param='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]' type='color' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[usr:Calculation_2181149626027630592:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59ABAD05-7F51-44CE-B003-46F26671BA6D}' />
    </window>
    <window class='worksheet' name='scatter_bias'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0o7linv13zeexi1edjfpe125euyk].[yr:year:ok]' type='filter' />
            <card param='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[Set 1]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:year:qk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[sum:diff:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA0BC9C7-F0DD-483B-9FEB-A9BD23DBE955}' />
    </window>
    <window class='worksheet' name='place_in_final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:to_country:nk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF006427-3065-4EDB-94EE-24CF5C99310E}' />
    </window>
    <window class='worksheet' name='jury_bias_participation_ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[:Measure Names]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:country:nk]</field>
            <field>[federated.0o7linv13zeexi1edjfpe125euyk].[none:jury_over_tele:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56F30415-12C8-49ED-8123-07EF202D893E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='avg_diff'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='scatter_bias'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{862385B4-2BD6-4EC8-8C90-62BAF767BCEC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dZ5AkyXWYv6yq9m56vHfr3d3e7jmcAw8ECMKRAAkCJAgSjCAliEGJUoR+
      MBQhMoLSDwUlkj8UJIMSQUkUDSjCG5I4HkAccDicwe7eejM7Ozuz421P++4ymfrRe3u3d2vG
      VJuZqS9iN2ZqurIyq/Nlvnz53ksxP5dVeHjsULR6V8DDo554AuCxo/EEwGNH4wmAx6ZZmsuS
      L9j1rsaGMKpZ+Mp0iue/PXnbtcHDXTx2vK2aj6WwlOZP/scFfuXfPEpr/M5NvHF+hq89N8tn
      //1x/Jt41vjFWUZmbN733j7EzWuLE8u8ei7NBz80jCbufJ9dMjl9epEHH+nBp1euvfLcZa6n
      dX7hE3s2USM4+cI1Rifyt1/UDT7yif2E/e6PeT98boRdT+zl0J6Y62VXm6oKgFk0mV+1+dhP
      D9+6Fk6EqvlIAAKJCJ/89CESYf2un2kfauFjn4ht+gU0t4QY+ccRnni6h2ig0rlGLizgC8Xv
      2vkB7LLFiVdmOHT8TQE4+Eg/Qy4MpMMHO2gftJkZXeTsWJGf/Il+EBp+4x4V2qFUVQAAdJ9O
      32DT264qvv/NKww9PEhfZ5BSKsc3n5/hY5/YS3Z2lZdeX+XZJ9t54flx9j06wFBPkDOvTDE6
      liYYC/LoU/10tAZ47TvXiPa1cXBvAlCceGGMUFcrewcCnHxpip/4+CEMKblwYprLV1Kg6wwd
      aOf4Q22UM0VOvr5Cb18MUExfW+bkiTlMR7DvaBeHDzQjhOQ7X7lC9742pkaXWM3YPPB4H/t2
      J261JNYWoyWkmJwucGA4inJsxq5lePJnBgEo58u8+uINZheKtHTGefzpPvzS5JtfHqGYN/nK
      X5/FF/TxkZ/dz+L0KrM5jY72MFMj84xMlWkOwei1NLHWGD/23gEChqCQLvDKDyZZXC7T3hPH
      8Bs8/XTvrTol26MkATOVxTfr3Pb+X3n+Km37urGXU4zcKPHBn9pNej7NKy9NkytK9j3YxQOH
      mxFC8a2/u8jQg92MX5onk3c49uQAuwYr7+vq2VnOnVtG8/tIrVrsuln+2MU5Tp9exJbQOdDM
      U091o4nGFbyqrwGsQpkffm/i1r/J6crUvDibpVh2AHAsm6nJLAqwSibTk2m+8XcXkX4/kbDO
      qReucW4ky7F39dHd4uNLf3WeXEnRlPBz9szirTLOnl6kpT2MkpKZGxkcBStTK3z/5QWOPt7H
      seMdWGWrUq+SxfRMDqioal/96jUG9ndw9Ggbrz0/woWraUAxP53h4oVlBva1M9gT5IXv3EC+
      pX1C09mzL8m1kRUAMotZcvjp7QyipORbX7zAqqXz2FN9kM/zta+MIvx+jj3WhT9g8OjT/Tz+
      RGUWyKeLLC2XAChmy1w6O4+p+Xj48W6mL89ybSKPsm2+/vnz5KTB40/3ExE2o2PZNX8fywtZ
      Lp+c4sWXF2jriGAVinz5by/TPtjCw490cOqfrzIyXvmO5qfSXLq4zPDBDnrb/Hzvu5NIYOLC
      LM99e5o9D3Ry9KF29Ju9yMrm+ftvjrP/aDePPt6DkBLV4LtMVZ8BNkJ2Kc9TnzjEwT0JlOPw
      /KUVnvnZowx2BWFXE1NjK4xNZNm3r5XvfP882bKkOJ2CRJz2pA+7YN0qKxDyI8smly8u0dsX
      54GjHe943ujFRXYf7eHBBytrEydf5Mz5JQ7vjQLw8DMDDHQEySYEP7p4g7d/p8P7Wjj59Uks
      2cf41RX69rTg1wWFVI7pZYdf+dQQYZ+grzvM5/74dTIlRXdPDN3Q6OlvIuS783voGGjm0ce6
      AGhrCeA4ksxihhXT4GMfHCagCwJ2mQuTK+t6v8sZh1/81aOEAhoT56fRExHaWwIIYHAwztho
      in1DYQAe+7EhupIGyYDk4sQcAFfOL3LsmUGOHKm8r7PxSgM0v0FQV1y+sEhff5wHjnWi30sP
      bACqLgC+cIAn3j3wtqv3HhYSXQkO7knc+qjjKPxvLN4E+AwNy5IEoiH6O3xcH8+SvbbE3oOt
      75jSom1xfvlXH+DqlWWuX5rjtdfm+MyvPXDbZxxb4o+9uV4wfBq25ay5jcnOBCE5yvxSmbGr
      KQ68Zz8A0pEITb81Qmq6hgbYjoIN9gvpKISm3XN9cT+OPtZD6OZ6xbYkZtFiaiINQKApQlfX
      vRezpukQDr/TdKAHAnz6sw8xcmmJ6YkUr7w4yS/9+sM0Re6+Fqs3dTODCgGZdBnbtJm4nr77
      53SNvt4oJ1+ZwbQlCzdWmJgt09cXBSHYd7CVkfMLjI3l2Lu/+R33r85nWco6HH2sj/d9YBey
      UKJo3i6AfUNNjJydYyVtUs6XOf36AgPDybW3xTDYvSvOpddnWMgJBnoiAISbIkQNi7PnlnGk
      5PLpGVQkRDJmoOkCadksp0o4jkSuUVeItUbxmUW+/8IUE2MpLlxYXnM970RbdwyzYNI11MK7
      nunn0OFWouF7j4ttHREunp6lWJbkVgtkcpWVeylb5MZUgQNHu3nvh/bQFJCsZhvbPFr1GaC4
      lOH3/9OLt34/9MQQH3hvDwce7OCfvnGR1/45wL49ibsXIARPvn8P//T1K/zRf3mJUCzIkx/Y
      S3uiMu3272nluX88QaS3lbbEO5sjkLz2nWt8dSaPEfBx/JlBEmGNt3abnr0dHJ8r8Pk//RGm
      FOw72s2jD7XCbdr+vdm9v5W//MvLDB/tJeSrDM+aYfCBj+3luW9c43tfv0RLV5wPfnQvfl1A
      JMTxh1r44p+dQI+G+LVfP7am5xjBAB/95AFe/sE0p5ZydLQEIG2uuZ5vJ96R4L0/1s3zXzxH
      JmfT1Brhyfftuuc9Dz01wPQXLvEn//UlOgeab70lTcClE5P845cuooTGgeM99HVsxsjsMkoR
      Ube/K+E5w20xlKRsKgKBilpx7qUxzk87m9472BEoRbu83WDQkItgj3sgHT7/p6fQowGEdFhZ
      tfjwzx+pd622LN4MsAVxbIfFuTy2hNbOCEF/4y4yG4o7zACeAHjsHJRi7vUxZlYdAmEfzz7S
      4qlAHjuLbM6mqTnE0f1xrpxf9LxBPXYWTzzRSV9S58vfmkHiLYI9dhhnziyxkHaIRn00xf3e
      GsBjB3GHRbCnAnnsaDwB8NjReALgsaPxFsEeO4rF+TxnRnLsP5BEL5c9AfDYWQSCBoM9IV45
      tcxwUngqkMfO4oc/WqRsSWxbIvBcITx2EkphTUwzNm/R3OSnOSQ8AfDYQVTLHVqTCqQnRx5r
      QwhwNG3DYaFu4toiWNkWIW3tcbS1RkqF5nKAdjXKdCwLzTAQLqYSeSPa0u3sJBtpv6MEpvBx
      K1C6zrgmALpQRHX34z+VUjjO5mcXx1HoLveAqpQpLTQpES4Klrw5O7surBtov42OyV3SYNSB
      uppB5+byZIsOkViAcq5MoazYNRRl7HoWI2CwZyCCEALDlYxmEsNwe9Rxv0xZttF1A83FEbJa
      ArCR9ksp7pcUpKbUdR4qlx2kA+WSTVkJdnX5uXI1Q1NnDBy5jpD07YPu87mq/njcm7oKQL4k
      GeoPUyzYKKmwLEkwpGNbEqVUI6yRak4DDY47groKQHd7kInpIp1dEVpjBnN52DsUQxZKRBOB
      HTkSSstCNXo+wW1EXdcATckgTclg5ZeYwRtJ0wf7t16abbd4QwVSSu3IAaDWNIYtyuMWUime
      /8GLvPjaq95MUAM8Z7gG40enTvK9V18BIQgGgjx69Gi9q7St8WaABmP3rt0kEwnaW1rYOzx8
      /xs8NoUrvkCaVGhWmWZj4zkqq41tu2+zr0qZpkmmUMAwDOLRqCtlVmsfYCPtN6VGWgVR/joo
      H15qxMZHWhZNsRia7mV7qwWeCtRgeBthtcUTgAbDs/vUFk8AGgxvI6y2eALQYGieClRTPAHw
      2NHU1Qq0uFggk3fQ/AYhTZIpKXb1h5m4kcMX8tHbHnI9iKPRkbaNpus70hGwHtRVANrawhgq
      T9HQSaVs+pI6I2NZoskwhVQR1R50b1WocF+3rkKZmmHATV8gt6gUpdw/s3dD7W+s9U1dBUAp
      xeyqzYFdITLpMrousCyJbgjEzbgJQeVo0M3iSIVwOWKzKmU6CoRydeaTiooUuNz3NtJ+2WBT
      W10FwCpZNLWEELogpMH1BZP9u+OMjecwggYaFUHQXYgIU0h0l3dtq1GmYzpomrsRYUJWhhK3
      d4I30n6nwSLC6ioA/pCf7lDl54GBN12g99/r2NRtju5yQLzHvfGsQA1GAw2OOwJPABoMadve
      RlgN8QSgwXA7J5DHvfEEwGNH4wlAg+GpQLXFE4AGw7MC1RZPABoMb+yvLVtaABwFpzOCvPsp
      SeuGpwLVli0rAFLBa2nBmZzG88sahcZNTL0uPCtQbdmyAiCAoAag8GsK3eszHhtgywbFCwFH
      Y4qorugPQWDLivLteO7QtWXLCgBUhGBPpN61cBdPBaotdR03pSO5MZUjX3LIZcpML5RQSrGw
      UGAla3kWEY+qU1cBGJ/IEksEMDQYnyvhsy0mZvJkbI3Z2QLuR3A0Pp4VqLbUVQXKFBz8WZPZ
      OQfDp5GI+Zi6XqB7KIQqmjiA7tYRSbYCl4/cqEaZCg3HAancK7dqRyRtoP0S0RCH471BXQWg
      o9lPpugQCBlYBZORSZvdu2KMTWQwfDo67LgjkpBaJSJOc6dcyyxjlUuEInHviKQ7UFcB6OqO
      0nXrt/Ctn44eTNajOg2Bm1Ygyyozdf08ZrlIz+AhIrEmb4H9NraJ8XD74KYVyCwVMMsFlHQo
      5lZdKXO7saXNoB73JhJL0t1/gEI+Q3PHgDf63wFPABoMtzfCYk2tROItLpW2/fBUoAbD2wir
      LZ4AeOxoPAFoMJS3EVZTPAFYJ0rdzLRWJYSnAtUUTwDWgVRwJit4NS1wYXPaowHYVlYgpRTF
      uRRGOIA/4b6b6LUCnMlVRueQpjgcvs8NG0DZNspzh64Z22YGUEpRmF5m4ssvM/7llzHTBdef
      0ReEdr8iYcDuKnR+8FSgWrOtZoDCzApOyULaDqXlDP6Eu700qMN7kgoHRVgHe4vHIivpgNB2
      tMBtGwEQQtD6yB6UUviTUeLDnVV5TqDKp5fWSgVSdpnSj/4QLbkH/76fQYhtowysi20jAFAR
      gvbH9tW7GpuiVipQ+eyfY9/4Lkx+Dy3Sga/v6ao/sxGpqwBMTWYpONDeGmJxPk/ZUgwNRBkb
      z6H7dQ4MR7ft9KyU4vTiAruaksT9/po/37f7p7BnXkWL9WJ0Hq/58xuFugqApHJ4g207OJrG
      7m6Dy9cydPQnyC7mt3VAzAszk/zRudPsTzbzW0cfIXZTCOyyhULDTY3kjgEx4W78z/wewhfD
      EUGw198OLyBmk7S1hfAbgivXcyAExZJDLO6jVLRxpEJjewbESKW4lFrBlJIb2SyrVplkOFj5
      Y8CHbmiuBcTAPSLC4ptdJ3kBMZvCKjvMzFsM9sco503SJclwX4iZmTyR1tC2VX80Ifjs4QcI
      GQZPdfUwlNi5J+LUGzE/l920PGpSoVllmg3TjTpVBdt2fwaoRplWoYAeCKDp7pmbqhUTvJH2
      m1IjrYIofx3GXqVol9nbLu1M21cDI3R92858jUhVxFCWLX545s0QvIGhOH1tgWo8avvhdf6a
      UpUZQAv4ePKRVvo6giTiPoJ+b6JZK547dG2pWs90CmVOX06TzZpMLDbu2gDAkvCjtCDXAK4N
      ngpUW6omAFrQz5EDCbAl7YnG3XB2FLyYElzMa/zzikax3mnWvc5fU6omAMqyef1CGuXTcT0f
      k4sIoMkHoIjpCle2HDaBcpxNqUBSOlhW2cUabU+kIylbsrr7AEpBJGTga+Dk/drNNOtNhqIv
      CL46L1eEtnHvTCkdZm9coVTI0jt8hECwSj7b24BypshrN6zqzABKKhxN55lHW+nuCBENVdmF
      cpNoAobD9e/8wKZUoHw2RXZ1CcsssbIw6S2m70NX0ledGUDZNnNLJkvLlam4uydKJNjYQtAo
      KMfZsDt0NN5CW9cghVya9p5d3mL6PkSbgtURAM0wmJhJo6N41/FW74tYB5tRgYQQNLf3kWzr
      RXPRl2g7EoiHaBeiemuAlcUCuVLFU3BgME5Pq7cRtiY2OVgIIbwBZw1ouoZGtZzhBHzk/X1v
      /up9H2tmMyqQx/qpzjwpBALFwnKJkaurZEt39xlfWSqSL0tWUyUmZosopZiZzbO4ajaS12zN
      2IwK5LF+qqYo2sUyr5xcZmKmyNmx/B0/41g2NyazrOQdppfKRIXD9ckcJWGwuFDcmVYMr/PX
      lKqtATTDoKkpwMGBEMv2nSxAipHRLPG4n0LBRjc0IhGdG0tFOvvDOHlRiRjbphFhd6NmEWEu
      4EWE3Q2lOHlqkdFpC7Ng0run+Y4f6+uLkl4pgk/DLklGp8vs2RVjbDyL4d+hRyT5jdpFhG2+
      ZC8i7I4IwcMPt9PcXSIeMYhEfXf6ENGoj+gbf+t400r0wIGmqlTrfiglAYUQddyz8FSgmlK1
      NYC0HM5czrCaMSmb7qoJ1UApSTn3XYrpL6Fk/bxXN+sL5LE+qiYAQtfQkSwslSmUG1cA8k7F
      HdoqncUsfB+7fJ5S/rt1q49nBaotVREAp2wxuVimrSVQWcw16PeZtuC5JY0fpATCfwDdvwdN
      7yAQfqx+lfI6f02pjiuE36CvyyAa0FgtSjqba5/46X4oBZfygqwjyDkwYwboT/wcSlloerR+
      9fI2wmpKVWYAIQTKNHn5fBaVL/H6NfczNW8WIeB4XNEflByLSfqDILRAXTs/eCpQraleRJjf
      IIjDxIJJZ/OdrED1x6fBu5OKQ9EG0jxcrEgus8LS3Li3qL4HVdsHOH8hhWZoHHmwlfZ444ZE
      Nlq0mlsqUD63ysz4RaR0kBJaO/q532JMKQVKuboH0ehUp6UKppZNju4Kc/pKBtNy3wqklCL/
      +uvIYtH1suuJWyqQ3x/E5w+iaTrBUJS1dP7F2XGmxy/iOA2QHaBGVMkZDoa7Q0ymHFqDkHI5
      3YJSisx3v8vyX/0Ni//n/24rIVBCuLJR6vMH6R0+TM/wYaKJlvta4jKpBVYWbpDLLLM0u3PU
      pqrtBO/fl6xK0QAohTW3AEphp1aQpTJaKFS959USxwGX0iL6bs4Ccg3HWsYSrWQTLZjlIs3t
      vTtmId64yvk9EJpG88/9LHosSvTxxzGS9XGdqAb1sgJpuk53/wGkdDB8jWe2rhZbUgAANJ+P
      5Ec+XO9quM4bKlA9xl9N111NyrsV2DnL/Q2gHEk5lavtQx2nskvnURPqOgOsLBdZTlvoAQMr
      b2LaisGBKGMTeXSfxqHdsbrpokpK5l68QOr8Dfo+/DCxwY6aPNfbCKstdRWAeMzHzEKJWMiH
      6dPZ2+Xj4liWroH6H5FUXsqQOjeBNG0WXhkh2NWC0G+fMKsSEOMolFAIzb1yvYCYu1PfE2Ik
      7N8V48p4HiEgm7dJNvsp5C0sqeoaEKN3JOj94HGWTozS96GH8QXu9KrcD4hRlkLXK1kLoOKm
      LbNTaLG+TWSM8wJi7kZdBcAsOcxmLIYGotglm3RJMtAdZH6+QKIjXFf/BCEEseFOYoMd7xj5
      q/rct6hASknMK1/GvPCXBI79Br7B93nqkcvUVQASTQESTTcjwQI68ZtHZXV2RupXqbcghIAa
      5zV9qxVIlVJYI18Bu4h5+e8wep5A+OvrrLcWMquLhMIxfP5gvatyXzwrEGDOzVO8MlLvalR4
      ixVIC7UQfPK30VoOEnrid9C2QOdfXZ5jZvwSk9fOYZmNn6V6y+4DuIU5N8fin/05slCg5dO/
      SPjQwZo+X0oH2zLxByo72W+3Ahkt+9Hf8/sIbWt8VZZZBBSOY+E4Fj4aOyPg1nir66Diw+Ig
      xNqaJnM5ZLGIsiyc1dX73+AiUjrMTY6Qz6boGTpEOJK440ZYPTp/oTCH35/AMNbnYtLaOYjQ
      NCKxZgLBxlBl78W2EgClJOX8CzjmDUJNP4+m3V8HDezaRetnfhl7eZnoux6vQS3fpFTIkl1d
      QilJamGK0GDcVV+gjZLNTnDi1f9ILD7E0WP/YV1CIISgtWOgirVzl221BrDLlzHzL+BYY5Sy
      z63pHiEEoX17iT3xrndYWKSCVasaNa0QiiTo7NtLJN5MZ9/eSmLbBtgImxj/BqXSIkuLJ1he
      OlPXulSbbTUDGIG9GIEHcewZgpF3b6osqeBEWjBaFDyTlPRWwaAhhCCebCeebEPcTAVXT1+g
      Nzhw8F9gmRmSLYdp76hjgoAasK0EQAiDUOKnUbKMpm9O/0zbMFoUWEpwISfoCqiqWEQro/1b
      Cm4AFUjXAzz40G8hRP1no2qzrVQgqAiBpkcgl4Ozp8HamA7TZMAzTZIuv+SZZHU6/51oBBUI
      QNN2xnGt22oGuEWpCCdfg2IRymU4/si6ixACeoLQHVQ1jRtuBBVoJ7HtZgAAfH5I3kzI29q6
      YZcKIeoQNO+5Q9eU7TkD6DocOgJd3dDadlMAGq9TKWUhnTS60XrrWqOoQDuF7TkDQEUI2tob
      KOHP7ShlUUx/jfzK57DNiTevU1tRnV9a4gv/8PeUyo3vtlAN6h8Qk7GIxALYBZNcWbF7KMLY
      9Ry+oMFwb6RR+++mcawZ7PIlwMIsvIru66tYXaRE1EgFSqXT/MWXvsBqJkO+UODTH/0YhrE9
      lYK7UdfWNiWDGLpgbtVCShhs83Hlaobmrhj5pTwShaZAuhAbIh2FI9ztWJspU+h9+CM/jVU+
      hz/y4YqfPAqpBEhwJznKzXrejAd4u1yFg2H6unrIZLPsHhgCtHUFH22k/arBVNG6CsDyYoG0
      Cbv7woxM5JFSYfg0pFQoxC1LiBuJyqQmXCnHvTIFgfARAuHDt6lpji4QVagrvPM9+v0GH//A
      B3j4yBF2DQyse+2xofbXWse7D3UVgEJZIiSsZG0SIY2ZtMPe4RgTEzlCUR8C4ZoKJIRyZXGp
      bJvcj04QOfYQQvdtrkxx679baFKioW7tDLvBG1W8U119Ph97hoY2WO7636lQjaXT1lUABvpj
      b/7S5Kfr5o/DQ/G61Od+KNtm5StfJf/yKxQvXaLpk78Ahss+Epq2qYW7lNLVw7KVXUK43cYG
      YvtagaqAUgqZq6RJkfl8xWbv9jPYuIbgODbT4xeYnx5lMpPh5dmZTaU4NMe/Q/6ffgMnM7Xh
      MhodMT+X3bRGpkmFZpVpNup3ttb9sG13AthluUzmuy8Qe+pJVDDselC8XSqh+/0bytA8Pz1K
      anGaBcvhc8sF0o7Dv33gId7d04dgfUHxTnqCwvP/GpwyWvM+wu/5Q4R+e5r7jbxTU2qkVRDl
      r4PyoRTtMnvbJW8GWCdaIEDTT74fPVql8MRNqC4t7f0EwzGMSAJbaDhKkbFMnJWVdScQ1uL9
      +A9/BoJJAsd+A7ZIRNp68WaAapapbtpw1+HdaZXL6D4f2gZmAKkUz12/xru6e5gvFrmWTvPj
      wTBLf/Y59GSSts98Ci0Sw3aKzEx/D1/oOF3tHXddLyilUOVVRKDpjp/ZDjPA9hTrRkApmBiH
      6Uk49jCEwmu6TSi1IUc4qRR/dfkS/2/0Ct+Zmea3H3mcPYkmLv6v/00slcJKpVj6m39H5OFj
      XDCnWVk+w1x6kIeP/yaH9x24YwcXQiCCVczy3QB4KlC1WE3BlUuQzcL5c+/YzZOmyfIXvkhp
      9Nrt921QBVJKkbVMFJC3LWwpUcC13m4uhoOMtmrI6BKvXT/D5aXKotY0bH546gR2FRbzWwVv
      BqgWTUkY3gUz07D/4G27UEpKVr74JQonTlI4c5b2f/UvCfT2Vv528996xUDXND57+AFagyGe
      7e2j5eZ5CR9630/w/Vich/b04j/933g41s9I4FFmVl9GKw/zyQ99CN8Oc394K94aYJ0oBeNF
      aPFD+H6pAZWqBOT4/W+7rCicPcfK33y+EpT/y59GC1Zs7ZuxAt2NWwdk2HmEHsBGoywdwrqx
      obXGG3hrgB2GUjCSh9cyGhEdnk1Ikvd6g0K8o/NXLgvCDxxBj8fxd3Xe6vy37qkSbyTWMswc
      6sYLiOEPVO1ZWwVvDbBOLFVxU3MU2JuYO4UQBIcGb+/8rG8jrGBZ/MHrJ7iSWlnzc6WZo/DS
      71I++d8pn/mfKLlz9X/wZoB1IQQciioMTdHug7hLw4eSJsXsP+APPohQXWvS/20p+f3XT/LK
      /CwnFxb4vSeepi8Wu/+N0garcnC5svI0lGdaHfBmgHUiBOyPQLNLx2jls8uk5v4au3SKQvpv
      cey5Nd2nC8GTXd34NI0jLa2QPU969f75TbVgE6Gn/zP+w79C8PhvbpmUi9Wirq1XSpEv2EQi
      PspFi2xJ0drkY3W1jC/oIxra3udVFfMZpq9fwueLkmzS8AX7EUbLmqxAQgje09tHRzhMrHiR
      S2f+AF0PcfzR3yURGwKhI7Q7vz8t1Ezg0Kdcb89WpK4zQDZjMjKeB6UYvZGnnC0xs1BkISu5
      fiO7dc+qVQrsytnItjmOXR6748f8wTDBSBzT6kQPfpxw4uNo+NZsAhVCcLilFQOrcpCGsnFK
      KYov/g6lU3+MkjvnwOuNUt8jkhIBmlYtlFQYAZ22pI8LY3l6hpvIWHZdj0jacJkKxI1xtJlJ
      zIOtlJ2vAQp/9BMY/l1vK0Gjs3c/ZrlIMBzDkeDIMsqWrCccoKPzWZTSCASaCU/+EHv+FMyf
      oty0B2Pw/d4RSfegrgKQTpeZXywRi/txSjajUzaDQ1FuTGURmqjrEUkbLjOVgtHLoBTa9UXo
      k4BC1+w7P9/w4w+8uaBQjoZuaOu2z/f2PVupUXwQmbqCFukkMPTjCF3zjki6B3XdCJNSIaW6
      GcBR0Rw0jVvX3PzCauYMpxRcG4XpSdSxR7B9c4CDEdi3piAVNzbClFUAzXfLfblaAuBthG0S
      TbtzJ9drfCyRqwgBu3bDwADC58dHxTRZHLlK/tQpmn/mY2h32BxztQq+tTneeZgfWj4AAAcQ
      SURBVHj7ANVBiEp2upuUJydZ+ou/QBVLYNu0fOoX3hzh33CS0xonO/ROwtsHqAG+9nYCQ8MI
      v5/w0QffdHewbTh9Cs6cvhVeeTd36LLZuH5WWxlvBqgBWiBA6y/9ItbcPP7+t5z3O34dFuYr
      P0/EYXj3He+/NHqVr3/723zywx9msLevRrXeGXgzQI3QAgECA/23L4QHByu5S9vaoX8QeFMF
      eoN0NsuXv/Ut0tkMX/yHv6dYKtWy2tseTwDqieGDh47D0WNgGDimzdzzpylMLt36SDwa5afe
      +z5ikQgfff9PEgw09qmLWw1PBaoTSilS5yeI9rWRm1wiNNDO4vfOkbk8RXZ8kaGfe4pQRyUW
      9/C+feweHCQYCHiZo13GmwHqgFKKxVdHmHn+NKN//QInp4t8KxtA9XcgNRgvrvDNV1/EuulO
      IYQgFAx6nb8KeDNAnVBSgYJMawszhw+A0LjY3g1DAQrxBO3t7RAKwdvDFZUCbx3gGp4A1AEh
      BO2P78MI+4kMtOOTNpO2j6dafBjvf5a5cpmAoVFwFImgASgW5mfxRZIkw94awE0aTgWyyxan
      zqc4fTm9db1B14DQBC1Hhwkmoxxr1vlgmyRmgOHzkQwIFsemGL1yEVsqsivzLOYl10evYMnt
      +07qQcMJQHa1TPdAnIhPsFOC9YQA/xvfhGmyfPY8M7bNjdQKtmVTKORJJpOEg35Mx12P1p1O
      wwlAKGKQTZuYjmR7h8PcnZWmJs5lV7hWMjk9cRU91MTEtSukizZBY6e+lerQcGuAQCRAc6mE
      rznasOd7VRW/nz1HHmK6ZQpd0zjc00fE56OluXLqZa2OT9opNJwACCFoaQ1VoVzXi6xOmUqR
      AH68vRNdE4SVgrf6ATWQAGyH8anhBKBa6Lr72l41yjQCAbDtihO1fFvn3yDuB8JUqEb7a83W
      b4GHxybwBMBjR7ONBUCxmipx9XqWVM5mfr7AtRt5HEcyNp5hbnljB0M7tsO18Sy2gtWVEiPX
      s5i2ZHIqx8RscVPhro7tMHo9w0Jq82pPLlNmcr4ESjFxI8vUfAmzZDMyliGV21i2iMr7rNw/
      O5tnbKqAdCSj1zPMLZuNFOq7ZraxAEAk6megK8DcbIFUXpIMweXRLNHmMKup0oa+MMdR6AIc
      qZhdMelv9zN6LYttGGBaFMyN2+kX5gq0dERILRfZ7H6X5tMxSxbZ1RJaOICZN7k2lae/P8rc
      XGFDbY9EfQx0hZifzbFaVISUw5XxLC0dEdKp4pbcuNyWAmCbNuPTRQp5kyuTJXYPhNH0SnYJ
      06oEcot1HkUtHcnEVB5h6Bha5VBroQl0XcO2JIYuMHTBZjK4SAWGLtBcOCY7HDIQQiAdhWEI
      dA1sJdA1seFwy0LOYmSyyJ7+MELX8emCkgV+Q6z7fTYK21IADL/BYHeI2YUSIZ8gXZQY0mF6
      yWbfrihzU1l8QWNdjdd0jYHeCGbBYjFlMrtoEgsIRicLDA7HKKRL5CyI+jducWltCTB5I4sv
      bLBZw83cXJ6VVRPHZ7C6WKAsNAba/Fy9liGW2Jg/0exikaBPsFoSGLbJQkFycCDM+EQWY53v
      s1HYMecDeDQG2zYtiql05iz3N7A8th/13D7Ii9tnP1cEQAmBL+i7/wc9PLh5BkI9cr8IUS0B
      YMd4bnq4RIO4UWzFdYuHh2t4AuBRNxzLxnIh83cuu7FNTfAEwGMdKKVYmMshN7DhlVrM8epL
      k8wvFCjmSqysljHTedJFSC/nyRcqu9PFggVKUio6pBZy5Is2Z09MMz2dQ9o2c7P5Sj1mMhRK
      FcU7l33T+ihzea7PliiXHIpFi7nRec5eTJHLW6AUxYKFY9mULUWpaO0cb1CPzWEVylweSbPv
      UCv5dAnTVhQLNqGQhtB0iiUHv6Yw/AZlS4FtEQj5saWiXLDp7I/RljbpaA8xemWFoCHQ4zpO
      oUi2DKQyDO5qZn42R1NYo+iACgZZmUwTbQrR3R3h+tUVurpCTI6lyJoa8ea7CKJ0WFywMU2T
      9ngALRgju5iGtggrKxa9XUHmprIgHU8APNaGLxxg13Cchfk83T1RYpsIBkgvF1BNIaJKBxSL
      s1mSyYp1piWmc33JZneHj9Wb/VsXYDlQKpSZmxeEowGaWnUmb2TZszd5q1zHkeRzFsFQCCtT
      ppC30JMhbEvS2Rvn1KtzHHm8B00HbBM9GPQEwGPthONBwvHg/T94F7p6YoDgwJE2sgVJLOkn
      oukENFCGAQJi7TGGghbhuJ/yQo5EX4KwXzC3UGDfoXbm5gq0tIdZmsnSN5i4rXzHtClqfrqS
      fpYti1hTE8GEH302h9KiJNtCBG6m3m/vjGGE/O7sBHt41BOzbOMP3HssL2RLCL+fUOD2Za83
      A3hsee7X+QHCsTvPXJ4VyGNH4wmAx47m/wP3OpwhennpDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='avg_diff' width='192'>
      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
      rDec+rohzv8Pd2apWxdtdGkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='jury_bias_participation_ratio' width='192'>
      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
      bUU4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='place_in_final' width='192'>
      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
      yP4f7sGNFHoTxesAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='scatter_bias' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sum_diff' width='192'>
      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
      5S+SuSUQKgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
